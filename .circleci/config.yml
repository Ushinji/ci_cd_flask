version: 2

jobs:
  build:
    docker:
      - image: circleci/python:3.7.1
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install awscli
          command: |
            sudo pip install awscli
            aws --version
      - run:
          name: Push release docker-image
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
            docker build -t $CONTAINER_IMAGE:test-$CIRCLE_SHA1 .
            docker push $CONTAINER_IMAGE:test-$CIRCLE_SHA1

  test:
    docker:
      - image: $CONTAINER_IMAGE:test-$CIRCLE_SHA1
        environment:
          RUN_MODE: test
          DATABASE_USER: root
          DATABASE_PASSWORD: cicdflask
          DATABASE_HOST: db
    working_directory: /app
    steps:
      - run:
          name: Run test
          command: pipenv run test
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: cicdrails
      working_directory: /app
      steps:
        - run:
            name: Install dockerize
            command: |
              wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
              && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
              && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
        - run:
            name: 'wait for db container'
            command: dockerize -wait tcp://$DATABASE_HOST:3306 -timeout 1m
        - run: 
            name: DB migrate
            command: | 
              python migrations/create_database.py
              python manage.py db upgrade
        - run:
            name: Run test
            command: pipenv run test
  
  code-check:
    docker:
      - image: $CONTAINER_IMAGE:test-$CIRCLE_SHA1
        environment:
          RAILS_ENV: test
    working_directory: /app
    steps:
      - run:
          name: Code check by flake8
          command:
            pipenv run lint


workflows:
  version: 2
  workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - code-check:
          requires:
            - build
